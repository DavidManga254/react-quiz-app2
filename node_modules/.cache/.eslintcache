[{"/Users/yasinakbulut/Desktop/react-project/quiz/src/index.js":"1","/Users/yasinakbulut/Desktop/react-project/quiz/src/App.js":"2","/Users/yasinakbulut/Desktop/react-project/quiz/src/reportWebVitals.js":"3","/Users/yasinakbulut/Desktop/react-project/quiz/src/Context/QuizContext.js":"4","/Users/yasinakbulut/Desktop/react-project/quiz/src/Components/Quiz.js":"5","/Users/yasinakbulut/Desktop/react-project/quiz/src/context/QuizContext.js":"6","/Users/yasinakbulut/Desktop/react-project/quiz/src/components/Quiz.js":"7","/Users/yasinakbulut/Desktop/react-project/quiz/src/Components/Result.js":"8","/Users/yasinakbulut/Desktop/react-project/quiz/src/components/Result.js":"9","/Users/yasinakbulut/Desktop/react-project/quiz/src/components/Home.js":"10","/Users/yasinakbulut/Desktop/react-project/quiz/src/components/Error.js":"11"},{"size":559,"mtime":1679924238959,"results":"12","hashOfConfig":"13"},{"size":606,"mtime":1680000514492,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1679828980916,"results":"15","hashOfConfig":"13"},{"size":40155,"mtime":1679938333193,"results":"16","hashOfConfig":"13"},{"size":5362,"mtime":1679938349016,"results":"17","hashOfConfig":"13"},{"size":40119,"mtime":1679954354509,"results":"18","hashOfConfig":"13"},{"size":5396,"mtime":1679998442297,"results":"19","hashOfConfig":"13"},{"size":2637,"mtime":1679938339186,"results":"20","hashOfConfig":"13"},{"size":2637,"mtime":1679998437710,"results":"21","hashOfConfig":"13"},{"size":2556,"mtime":1679998410712,"results":"22","hashOfConfig":"13"},{"size":487,"mtime":1680000519725,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"bq05f4",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yasinakbulut/Desktop/react-project/quiz/src/index.js",[],[],[],"/Users/yasinakbulut/Desktop/react-project/quiz/src/App.js",[],[],"/Users/yasinakbulut/Desktop/react-project/quiz/src/reportWebVitals.js",[],[],"/Users/yasinakbulut/Desktop/react-project/quiz/src/Context/QuizContext.js",["59"],[],"/Users/yasinakbulut/Desktop/react-project/quiz/src/Components/Quiz.js",["60"],[],"/Users/yasinakbulut/Desktop/react-project/quiz/src/context/QuizContext.js",[],[],"/Users/yasinakbulut/Desktop/react-project/quiz/src/components/Quiz.js",["61"],[],"import React, { useState, useEffect } from \"react\";\nimport { useQuizContext } from \"../context/QuizContext\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nfunction Quiz() {\n  const { level } = useParams();\n  const navigate = useNavigate();\n\n  const { questions, currentQuestion, setCurrentQuestion } = useQuizContext();\n\n  const [isNextButton, setIsNextButton] = useState(false);\n  const [isResultButton, setIsResultButton] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState();\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [time, setTime] = useState(30);\n  const [isErrorMessage, setIsErrorMessage] = useState(false);\n  const [isResult, setIsResult] = useState(false);\n\n  const selectAnswer = (index) => {\n    if (currentQuestion === questions[level].length - 1) {\n      setIsNextButton(false);\n      setIsResultButton(true);\n    } else {\n      setIsNextButton(true);\n    }\n    setSelectedIndex(index);\n  };\n\n  const nextQuestion = (index) => {\n    if (currentQuestion >= questions[level].length - 1) {\n      addAnswer(index);\n      setCurrentQuestion(0);\n      setIsResult(true);\n    } else {\n      setTime(30);\n      setIsNextButton(false);\n      addAnswer(index);\n      setCurrentQuestion(currentQuestion + 1);\n      setSelectedIndex();\n    }\n  };\n\n  const addAnswer = (index) => {\n    const selectedAnswer =\n      index !== null\n        ? questions[level][currentQuestion].answers[index]\n        : {\n            answer: \"SÃ¼re Bitti\",\n            trueAnswer: false,\n          };\n    const newAnswers = [...selectedAnswers, selectedAnswer];\n    setSelectedAnswers(newAnswers);\n  };\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTime(time - 1);\n    }, 1000);\n    time <= 5 ? setIsErrorMessage(true) : setIsErrorMessage(false);\n    if (time < 0) {\n      nextQuestion(null);\n    }\n    return () => clearInterval(timer);\n  }, [time]);\n\n  return isResult ? (\n    navigate(\"/result\", {\n      state: {\n        answers: selectedAnswers,\n        questions: questions[level],\n      },\n    })\n  ) : (\n    <div>\n      <div className=\"progress-box\">\n        <div className=\"progress-top\">\n          <div className=\"progress-texts\">\n            <h2 className=\"progress-title\">Quiz Progress</h2>\n            <p className=\"progress-description\">\n              You are solving {level} Level words quiz\n            </p>\n          </div>\n          <div className=\"progress-icon\">\n            <i className=\"bi bi-bar-chart\"></i>\n          </div>\n        </div>\n        <div className=\"progress-bottom\">\n          <div\n            className=\"progress-circle\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            style={{\n              \"--value\":\n                ((currentQuestion + 1) / questions[level].length) * 100,\n            }}\n          >\n            <span className=\"progress-big\">{currentQuestion + 1}</span>\n            <span className=\"progress-mini\">/{questions[level].length}</span>\n          </div>\n          <p className=\"progress-detail\">\n            You solve the {currentQuestion + 1}. question out of a total of{\" \"}\n            {questions[level].length} questions\n          </p>\n        </div>\n      </div>\n      <div className=\"question-box\">\n        <div className=\"question-text\">\n          <h2 className=\"question-title\">Question: {currentQuestion + 1}</h2>\n          <h3 className=\"question\">\n            {questions[level][currentQuestion].question}\n          </h3>\n        </div>\n        <div\n          className=\"progress-circle time\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n          style={{ \"--value\": (time / 30) * 100 }}\n        >\n          <span className=\"time\">{time}</span>\n        </div>\n      </div>\n\n      <div className=\"answers-boxes\">\n        {questions[level][currentQuestion].answers.map((answer, index) => {\n          return (\n            <label\n              onClick={() => selectAnswer(index)}\n              key={index}\n              htmlFor={index}\n              className={\n                selectedIndex === index\n                  ? \"answer-label selected\"\n                  : \"answer-label\"\n              }\n            >\n              {answer.answer}\n              <input type=\"radio\" name=\"answer\" id={index} />\n            </label>\n          );\n        })}\n      </div>\n\n      {isNextButton ? (\n        <div className=\"next\">\n          <button\n            onClick={() => nextQuestion(selectedIndex)}\n            type=\"button\"\n            className=\"next-btn\"\n          >\n            Next Question\n            <div className=\"icon\">\n              <i className=\"bi bi-arrow-right\"></i>\n            </div>\n          </button>\n        </div>\n      ) : null}\n\n      {isResultButton ? (\n        <div className=\"next\">\n          <button\n            onClick={() => nextQuestion(selectedIndex)}\n            type=\"button\"\n            className=\"next-btn result-btn\"\n          >\n            See Results\n            <div className=\"icon\">\n              <i className=\"bi bi-bar-chart\"></i>\n            </div>\n          </button>\n        </div>\n      ) : null}\n\n      {isErrorMessage ? (\n        <div className=\"message animation\">\n          <div className=\"icon\">\n            <i className=\"bi bi-exclamation-triangle\"></i>\n          </div>\n          <span>You must hurry up!</span>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Quiz;\n","/Users/yasinakbulut/Desktop/react-project/quiz/src/Components/Result.js",["62"],[],"/Users/yasinakbulut/Desktop/react-project/quiz/src/components/Result.js",[],[],"/Users/yasinakbulut/Desktop/react-project/quiz/src/components/Home.js",[],[],"/Users/yasinakbulut/Desktop/react-project/quiz/src/components/Error.js",[],[],{"ruleId":"63","severity":1,"message":"64","line":1,"column":44,"nodeType":"65","messageId":"66","endLine":1,"endColumn":53},{"ruleId":"67","severity":1,"message":"68","line":57,"column":6,"nodeType":"69","endLine":57,"endColumn":12,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"68","line":64,"column":6,"nodeType":"69","endLine":64,"endColumn":12,"suggestions":"71"},{"ruleId":"63","severity":1,"message":"72","line":7,"column":7,"nodeType":"65","messageId":"66","endLine":7,"endColumn":14},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'nextQuestion'. Either include it or remove the dependency array.","ArrayExpression",["73"],["74"],"'answers' is assigned a value but never used.",{"desc":"75","fix":"76"},{"desc":"75","fix":"77"},"Update the dependencies array to be: [nextQuestion, time]",{"range":"78","text":"79"},{"range":"80","text":"79"},[1727,1733],"[nextQuestion, time]",[1906,1912]]